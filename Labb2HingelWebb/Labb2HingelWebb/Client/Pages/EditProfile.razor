@page "/EditProfile"
@using Labb2HingelWebb.Shared.DTOs
@using Microsoft.AspNetCore.Authorization
@using Labb2HingelWebb.Shared

@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]

<h3>EditProfile</h3>

<div class="container">
	<EditForm Model="ActiveCustomerDto" OnSubmit="UpdateUser">
		<div class="form-control">
			<label>Name: @ActiveCustomerDto.UserName</label>
			<label>Address</label>
			<InputText @bind-Value="ActiveCustomerDto.Address"></InputText>
		</div>
		<button class="btn btn-primary">Send</button>
	</EditForm>
	
	<div>
		<p>Response Message: @ResponseMessage</p>
	</div>
</div>


@code {


//TODO: Delete this page. Not Needed anymor. If not used as an admin?


	public CustomerDto ActiveCustomerDto { get; set; } = new();
	public string ResponseMessage { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		var userInfo = await AuthenticationStateProvider.GetAuthenticationStateAsync();

		var userName = userInfo.User.Identity.Name;
		
		var response = await HttpClient.GetFromJsonAsync<ServiceResponse<CustomerDto>>(HttpClient.BaseAddress + $"findUserByName/{userName}");
		
		if (response.Success)
		{
			ActiveCustomerDto = response.Data;
			ResponseMessage = response.Message;
		}
		else
		{
			ResponseMessage = response.Message;
		}
		
		await base.OnInitializedAsync();
	}


	private async Task UpdateUser()
	{
		var response = await HttpClient.PostAsJsonAsync(HttpClient.BaseAddress + "updateUser", ActiveCustomerDto);
		var result = await response.Content.ReadFromJsonAsync<ServiceResponse<CustomerDto>>();
		if (result.Success)
		{
			ActiveCustomerDto = result.Data;
			ResponseMessage = result.Message;
		}

		else
		{
			ResponseMessage = result.Message;
		}
	}
}